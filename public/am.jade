doctype html

html
	head
		title AList Manager
		link(rel="stylesheet" type="text/css" href="controller.css")
		link(rel="stylesheet" type="text/css" href="common.css")
		script(src='jquery-3.1.0.js').
		script(type="text/javascript").
			const bs_name = [null,'萎縮','放心','硬直','惑乱','衰弱','重篤','慢心','追擊'];
			const cs_name = [null,'再生','輕減','障壁'];
			var adatas = [];
			$(document).ready(function(){
				$.post('./alist/a',function(data){
					console.log(data);
					adatas = data;
					loadEdatas();
				});
				if(!!window.EventSource)
				source = new EventSource('/sse/a');
				//listener source url
				source.onopen = function(){
					console.log('eventsource on open');
				};
				source.onmessage = function(re) {
					//console.log(re);
					console.log("/sse/a/ on message");
					var data = JSON.parse(re.data);
					//console.log(re);
					adatas = data.a;
					loadEdatas();
				};
				$('td.clickable').click(function(){
					var a = $(this).attr('id').substr(2,5);
					var s = a.substr(0,2).toLowerCase();
					var n = a.substr(2,1);
					var x = a.substr(4,1);
					adatas[x][s][n] ^= 1;
					updateAlistToServer(x,s+n);
				});
			});
			function add(){
				var type = $('#s_new_type').val();
				var id = $('#i_new_id').val();
				if(id=="" || id == undefined){alert('Please enter ID');return;}
				$.post('/add/'+type+'/'+id);
			}
			function minus(x){
				alert(x);
				$.post('/remove/alid/'+x,{type:adatas[x].type});
			}
			function increment(x,item){
				adatas[x][item]++;
				updateAlistToServer(x,item);
			}
			function decrement(x,item){
				if(adatas[x][item] == 0)return;
				else adatas[x][item]--;
				updateAlistToServer(x,item);
			}
			function increment_s(x,item){
				var s = item.substr(0,2).toLowerCase();
				var n = item.substr(2,1);
				//alert(x+":"+s+":"+n+" value="+adatas[x][s][n]);
				adatas[x][s][n]++;
				updateAlistToServer(x,s+n);
			}
			function decrement_s(x,item){
				var s = item.substr(0,2).toLowerCase();
				var n = item.substr(2,1);
				//alert(x+":"+s+":"+n+" value="+adatas[x][s][n]);
				if(adatas[x][s][n] == 0)return;
				else adatas[x][s][n]--;
				updateAlistToServer(x,s+n);
			}
			function loadEdatas(){
				for(var x = 0;x<adatas.length;x++){
					loadEdata(x);
					$('#cont_'+x).removeClass('unload');
					$('#cont2_'+x).removeClass('unload');
					
				}
				for(var x = adatas.length;x<24;x++){
					$('#cont_'+x).addClass('unload');
					$('#cont2_'+x).addClass('unload');
				}
			}
			function loadEdata(x){
				var adata = adatas[x];
				var data = adatas[x].data;
				$('#f_name_'+x).val(adata.name);
				$('#f_action_'+x).val(adata.action);
				$('#f_type_'+x).val(adata.type+adata.lid);
				$('#f_status_'+x).val(adata.status);
				if(adata.type=='c'){
					$('#f_hate_'+x).val(adata.hate);
					$('#f_LS1_'+x).val(adata.ls[1]);
				} else {
					$('#f_hate_'+x).prop('disabled',true);
					$('#f_LS1_'+x).prop('disabled',true);
				}
				$('#f_effect_'+x).val(adata.effect);
				$('#f_HP_'+x).val(adata.hp);
				$('#f_MAX_HP_'+x).val(data.max_hitpoint);
				
				if(adata.bs[1] == 1)$('#f_BS1_'+x).addClass('backred');
				else $('#f_BS1_'+x).removeClass('backred');
				if(adata.bs[2] == 1)$('#f_BS2_'+x).addClass('backred');
				else $('#f_BS2_'+x).removeClass('backred');
				if(adata.bs[3] == 1)$('#f_BS3_'+x).addClass('backred');
				else $('#f_BS3_'+x).removeClass('backred');
				if(adata.bs[4] == 1)$('#f_BS4_'+x).addClass('backred');
				else $('#f_BS4_'+x).removeClass('backred');
				if(adata.bs[6] == 1)$('#f_BS6_'+x).addClass('backred');
				else $('#f_BS6_'+x).removeClass('backred');
				if(adata.bs[7] == 1)$('#f_BS7_'+x).addClass('backred');
				else $('#f_BS7_'+x).removeClass('backred');
				
				if(adata.ls[3] == 1)$('#f_LS3_'+x).addClass('backblack');
				else $('#f_LS3_'+x).removeClass('backblack');
				
				if(adata.ls[4] == 1)$('#f_LS4_'+x).addClass('backblack');
				else $('#f_LS4_'+x).removeClass('backblack');
				
				if(adata.bs[5] != 0){
					$('#f_BS5_'+x).addClass('backred');
					$('#f_BS5_'+x).text(bs_name[5]+':'+adata.bs[5]);
				} else {
					$('#f_BS5_'+x).removeClass('backred');
					$('#f_BS5_'+x).text(bs_name[5]);
				}
				if(adata.cs[1] != 0){
					$('#f_CS1_'+x).addClass('backgreen');
					$('#f_CS1_'+x).text(cs_name[1]+':'+adata.cs[1]);
				} else {
					$('#f_CS1_'+x).removeClass('backgreen');
					$('#f_CS1_'+x).text(cs_name[1]);
				}
				if(adata.cs[3] != 0){
					$('#f_CS3_'+x).addClass('backgreen');
					$('#f_CS3_'+x).text(cs_name[3]+':'+adata.cs[3]);
				} else {
					$('#f_CS3_'+x).removeClass('backgreen');
					$('#f_CS3_'+x).text(cs_name[3]);
				}
				
				if(adata.bs[8].length > 0){
					$('#f_BS8_'+x).addClass('backred');
					$('#f_BS8_'+x).text(bs_name[8]+':'+Math.max.apply(null,adata.bs[8]));
				} else {
					$('#f_BS8_'+x).removeClass('backred');
					$('#f_BS8_'+x).text(bs_name[8]);
				}
			}
			function getAction(x){
				return adatas[x].action;
			}
			function updateAlistToServer(x,item){
				var value;
				switch(item){
					case 'effect':
					case 'hp':
					case 'hate':
						//adatas[x][item] = $('#e_'+item+'_'+x).val()
						value = adatas[x][item];
					break;
					case 'bs1':
					case 'bs2':
					case 'bs3':
					case 'bs4':
					case 'bs6':
					case 'bs7':
					case 'bs8':
					case 'bs5':
					case 'cs3':
					case 'cs1':
					case 'ls1':
					case 'ls3':
					case 'ls4':
						value = adatas[x][item.substr(0,2)][item.charAt(2)];
						break;
				}
				//update alist
				console.log("update "+item+" "+value);
				
				$.post('./update/'+adatas[x].type+'/'+adatas[x].lid+'/',{item:item,value:value});
			}
	body
		div
			|add
			select(id='s_new_type')
				option(value='c').
					Character
				option(value='e').
					Enemy
			input(type='text' id='i_new_id').value
			button(onClick='add()').
				ADD
		- for(var x = 0;x<24;x++)
			div(id='cont_'+x).unload.display.container
				table
					tr
						td(width=30)
							|ID
						td
							|T
						td
							|Name
						td
							|A
						td
							|F
						td
							|H
						td
							|E
						td
							|HP
					tr
						td
							label(id=x).
								#{x}
						td
							input(id='f_type_'+x disabled).shortvalue
						td
							input(id='f_name_'+x disabled).longvalue
						td
							input(id='f_action_'+x disabled).shortvalue
						td
							button(onClick='increment_s('+x+',"ls1")').mini.
								+
							input(id='f_LS1_'+x).shortvalue
							button(onClick='decrement_s('+x+',"ls1")').mini.
								-
						td
							button(onClick='increment('+x+',"hate")').mini.
								+
							input(id='f_hate_'+x).shortvalue
							button(onClick='decrement('+x+',"hate")').mini.
								-
						td
							button(onClick='increment('+x+',"effect")').mini.
								+
							input(id='f_effect_'+x).shortvalue
							button(onClick='decrement('+x+',"effect")').mini.
								-
						td
							input(id='f_HP_'+x).shortvalue
							|/
							input(id='f_MAX_HP_'+x disabled).shortvalue
						td
							button(onClick='minus('+x+')').
								Delete
				table(id='t_S_'+x)
					tr.fixedwidth
						td(id='f_BS1_'+x).clickable
							|萎縮
						td(id='f_BS2_'+x).clickable
							|放心
						td(id='f_BS3_'+x).clickable
							|硬直
						td(id='f_BS4_'+x).clickable
							|惑乱
						td(id='f_BS6_'+x).clickable
							|重篤
						td(id='f_BS7_'+x).clickable
							|慢心
						td.display
							input(type="radio" value="B" name="toki"+x id="f_toki_B_"+x checked)
							label(for="f_toki_B_"+x).
								未行動
						td.display
							input(type="radio" value="W" name="toki"+x id="f_toki_W_"+x)
							label(for="f_toki_W_"+x).
								待機中
					tr.fixedwidth
						td(id='f_BS5_'+x)
							|衰弱
						td(id='f_BS8_'+x)
							|追擊
						td(id='f_CS1_'+x)
							|再生
						td(id='f_CS3_'+x)
							|障壁
						td(id='f_LS3_'+x).clickable
							|戦闘不能
						td(id='f_LS4_'+x).clickable
							|死亡
						td.display
							input(type="radio" value="F" name="toki"+x id="f_toki_F_"+x)
							label(for="f_toki_F_"+x).
								行動済
					tr
						td(colspan=8)
							input(id='f_CS2_'+x disabled).fullwidth